source("http://bioconductor.org/biocLite.R")
biocLite()
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
qunif(0.75)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(nlme)
rm(list<-ls())
rm(ls<-list())
?rm
rm(list=ls())
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
str(p)
class(p)
rm(list=ls())
library(datasets)
data(airquality)
rm(list=ls())
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
rm(list=ls())
library(lattice)
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
rm(list= ls())
?rm
rm(list = ls())
install.packages("xtable")
ls()
dir()
cd ./DataAnalysis
setwd "./DataAnalysis"
setwd("./DataAnalysis")
dir()
setwd("./DS-05-ReproducibleResearch")
dir()
setwd("./RepData_PeerAssessment1")
getwd()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
pa1data<- read.table(unzip(temp, "activity.csv"))
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
pa1data<- read.table(unzip(temp, "activity.csv"))
rm(list = ls())
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp)
pa1data<- read.table(unzip(temp, "activity.csv"))
pa1data<- read.table(unzip(temp, "activity.csv"), header = TRUE)
install.packages("knitr")
rm(list = ls())
library(knitr)
library(data.table)
library(ggplot2)
rm(list = ls())
library(knitr)
library(data.table)
library(ggplot2)
rawdata<- read.csv("activity.csv", header = true, colClasses = c("numeric", "character", "numeric"))
rawdata<- read.csv("activity.csv", colClasses = c("numeric", "character", "numeric"))
View(rawdata)
View(rawdata)
rawdata<- read.csv("activity.csv", colClasses = c("numeric", "character", "factor"))
rawdata$date<-as.Date(rawdata$date, format ="%Y-%m-%d")
View(rawdata)
View(rawdata)
stepsdaily< - tapply(rawdata$steps, rawdata$date, sum, rm.na = TRUE)
stepsdaily<- tapply(rawdata$steps, rawdata$date, sum, rm.na = TRUE)
hist(stepsdaily)
hist(stepsdaily, title="Histogram of Total Daily Steps", xlab = "Number of Total Daily Step")
hist(stepsdaily, main ="Histogram of Total Daily Steps", xlab = "Number of Total Daily Step")
hist(stepsdaily, main ="Histogram of Total Daily Steps", xlab = "Number of Total Daily Step")
mean(stepsdaily, na,rm = TRUE)
median(stepsdaily, na.rm = TRUE)
mean(stepsdaily, na.rm = TRUE)
median(stepsdaily, na.rm = TRUE)
rm(list = ls())
library(stats)
library(knitr)
library(data.table)
library(ggplot2)
rawdata<- read.csv("activity.csv", colClasses = c("numeric", "character", "numeric"))
rawdata$date<-as.Date(rawdata$date, format ="%Y-%m-%d")
steptimeave<-aggregate(steps ~ interval, data = rawdata, mean, na.rm = TRUE)
View(steptimeave)
View(steptimeave)
plot(steptimeave$interval, steptimeave$steps)
plot(steptimeave$interval, steptimeave$steps, type ="l)
plot(steptimeave$interval, steptimeave$steps, type ="l")
plot(steptimeave$interval, steptimeave$steps, type ="l", main = "Average Steps by Time Interval of Day",
xlab = "Start Time of 5 minute interval", ylab = "Average Steps per time interval")
View(steptimeave)
steptimeave$interval[which.max(steps)]
steptimeave$interval[which.max(steptimeave$steps)]
sum(is.na(rawdata$steps))
rawdata<-is.na(rawdata$steps)
rawdata<- read.csv("activity.csv", colClasses = c("numeric", "character", "numeric"))
rawdata$date<-as.Date(rawdata$date, format ="%Y-%m-%d")
rawdata<-colbind(is.na(rawdata$steps))
impute<-rawdata
for (i in steptimeave$interval) {
impute[ (impute$interval == i) & (is.na(impute$step)),]$steps <-
steptimeave[steptimeave$interval == i]
}
for (i in steptimeave$interval) {
impute[impute$interval == i & is.na(impute$step) ,]$steps <-
steptimeave[steptimeave$interval == i]
}
rm(list = ls())
install.packages(c("ggplot2", "jsonlite", "Matrix", "mgcv"))
